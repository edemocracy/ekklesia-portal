- if layout
  - extends 'ekklesia_portal/layout.j2.jade'

- block title
  title
    = brand_title
    |&nbsp;-&nbsp;
    = _('propositions')

- block content

  ul.sort-nav

    li.nav-item
      a.nav-link(class=("" if sort else "active"), href=change_self_link(sort=none))
        = _("btn_sort_by_identifier_or_title")

    li.nav-item
      a.nav-link(class=("active" if sort=="supporter_count" else ""), href=change_self_link(sort="supporter_count"))
        = _("btn_sort_by_supporter_count")

    li.nav-item
      a.nav-link(class=("active" if sort=="date" else ""), href=change_self_link(sort="date"))
        = _("btn_sort_by_date")


  ul.filter-nav

    if department
      li.nav-item
        .filter
          = _('department_propositions')
          |:&nbsp;
          strong= department
          |&nbsp;
          a.btn_filter_remove(href=change_self_link(department=none), title=_('remove_filter')) X

    if subject_area
      li.nav-item
        .filter
          = _('subject_area_propositions')
          |:&nbsp;
          strong= subject_area
          |&nbsp;
          a.btn_filter_remove(href=change_self_link(subject_area=none), title=_('remove_filter')) X

    if section
      li.nav-item
        .filter
          = _('section')
          |:&nbsp;
          strong= section
          |&nbsp;
          a.btn_filter_remove(href=change_self_link(section=none), title=_('remove_filter')) X

    if type
      li.nav-item
        .filter
          = _('type_propositions')
          |:&nbsp;
          strong= proposition_type_name(proposition_type=type)
          |&nbsp;
          a.btn_filter_remove(href=change_self_link(type=none), title=_('remove_filter')) X

    if phase
      li.nav-item
        .filter
          = _('phase_propositions')
          |:&nbsp;
          strong= voting_phase_title(phase=phase)
          |&nbsp;
          a.btn_filter_remove(href=change_self_link(phase=none), title=_('remove_filter')) X

    if visibility_values
      li.nav-item
        .filter
          = _('visibility')
          |:&nbsp;
          for visibility in visibility_values
            strong= visibility|enum_value
            |&nbsp;
          a.btn_filter_remove(href=change_self_link(visibility=none), title=_('remove_filter')) X

    if status_values
      li.nav-item
        ul.proposition_filter
          li
            = _('status_propositions')
            |:
          for status in status_values
            li.or
              span.value= status|enum_value
          li
            a.btn_filter_remove(href=change_self_link(status=none), title=_('remove_filter')) X

    if search
      li.nav-item
        .filter
          = _('search_for')
          |:&nbsp;
          strong= search
          |&nbsp;
          a.btn_filter_remove(href=change_self_link(search=none), title=_('remove_filter')) X

    if tag_values
      li.nav-item
        ul.proposition_filter
          li
            = _('tagged_propositions')
            |:
          for tag in tag_values
            li.and
              span.value= tag
          li
            a.btn_filter_remove(href=change_self_link(tags=none), title=_('remove_filter')) X

    if without_tag_values
      li.nav-item
        ul.proposition_filter
          li
            = _('propositions_without_tags')
            |:
          for tag in without_tag_values
            li
              span.value= tag
          li
            a.btn_filter_remove(href=change_self_link(without_tags=none), title=_('remove_filter')) X

    if only_supporting
      li.nav-item
        ul.proposition_filter
          li
            = _('only_supporting')
          li
            a.btn_filter_remove(href=change_self_link(only_supporting = none), title=_('remove_filter')) X

  div.page-selector
    = pager()

  if propositions
    = render_cell(collection=propositions)
  else
    = _('no_propositions_found')

  div.page-selector-bottom
    = pager()

    form
      if search_query
        input(type="hidden",name="search",value=search_query)
      if sort
        input(type="hidden",name="sort",value=sort)

      select(name="per_page",autocomplete="off",onchange="this.form.submit()")
        if prop_per_page > 0 and prop_per_page not in [5, 10, 20, 50]
          option(selected=true, value=prop_per_page)
            = prop_per_page

        for amount in [5, 10, 20, 50]
          option(selected=(prop_per_page==amount), value=amount)
            = amount
        option(selected=(prop_per_page < 0), value="-1")
          = _("all_pages")

      i.fas.fa-chevron-down.select-dropdown-icon

      = _("per_page")
      input(type="submit", value=_("set_page_count"), id="submit_page_count")
      script
        = "document.getElementById('submit_page_count').style.display = 'none';" | safe

    .proposition-export
      span.mr-1= _('export_proposition_to_file')+":"
      a.btn.btn-secondary(href=export_csv_url, title=_('export_as_csv'))
        i.fas.fa-file-csv
          |&nbsp;
          |CSV


// generated from jade
//- vim: set filetype=jade sw=2 ts=2 sts=2 expandtab:
